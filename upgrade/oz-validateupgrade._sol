// SPDX-License-Identifier: MIT
pragma solidity ^0.8.19;  // or another version your Foundry setup supports

import "forge-std/Script.sol";
import {Upgrades, Options} from "openzeppelin-foundry-upgrades/Upgrades.sol";
import {MyContractV1} from "./example.sol";
import {MyContractV2} from "./example.sol";

contract UpgradeScript is Script {
    function run() external {
        // Use Options if needed (e.g. to configure safety checks or reference contract)
        Options memory opts;

        // Deploy Transparent Proxy for version 1
        address proxy = Upgrades.deployTransparentProxy(
            "MyContractV1.sol",
            msg.sender,
            abi.encodeCall(MyContractV1.initialize, (123)),
            opts
        );

        // Log for debugging
        console.log("Proxy deployed at:", proxy);

        // Optionally upgrade to V2
        address newImpl = Upgrades.upgradeProxy(
            proxy,
            "MyContractV2.sol",
            abi.encodeCall(MyContractV2.initialize, ()) ,
            opts
        );

        console.log("Proxy now uses implementation:", Upgrades.getImplementationAddress(proxy));
    }
}